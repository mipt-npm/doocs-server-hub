#!/bin/sh
# post install script for the Debian GNU/Linux doocs-clean-template-server package
#
# automatically created by make-doocspkg
#
#DEBHELPER#

# Autogenerated input parameters from doocs-makepkg
# SERNAME is the name of the server in the watchdog
# SERBASE is the base name of the server used for directories and files
SERNAME=CLEAN_TEMPLATE
SERBASE=clean_template

### no changes by autogenerator hereafter

SERVDIR=${SERBASE}_server
INSTDIR=/export/doocs/server/${SERVDIR}

BINARY=${INSTDIR}/${SERBASE}_server
CONFFILE=${BINARY}.conf
LOGFILE=${BINARY}.log
PIDFILE=${BINARY}.PID

#
# Server executable name will be ${INSTDIR}/${SERBASE}_server
# Often the ${SERVDIR} equals ${SERVASE}_server, but this is not needed
#
# The executable will be installed from ${INSTDIR}/${SERBASE}_server.dist
# Config file will be ${INSTDIR}/${SERBASE}_server.conf
# Watchdog name will be ${SERNAME}

set -e

case "$1" in
	configure)
		# continue as normal
		;;
	abort-upgrade|abort-remove|abort-deconfigure)
		echo "abort-upgrade|abort-remove|abort-deconfigure not supported"
		exit 0;
	;;
	*)
		echo "postinst called with unknown argument \`$1'" >&2;
		exit 0;
	;;
esac

######## make the /export/<nodename> line ######################
NODENAME=`uname -n`
UNODENAME=`uname -n | sed -e "y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/" `

######## RPC_LIBNO
if [ -f ${INSTDIR}/RPC_LIBNO ] ; then
	RPC_LIBNO=`cat ${INSTDIR}/RPC_LIBNO`
	export RPC_LIBNO
else
	echo 2>&1 "File: ${INSTDIR}/RPC_LIBNO is missing"
	exit 1
fi

#
# dropped: check of old style conf file and then add SVR.RPC_NUMBER to con
#

######## prepare initial config if needed
if [ ! -f ${CONFFILE} ] ; then
	if [ -f ${INSTDIR}/${SERBASE}_CONF.TEMPLATE ] ; then
		runuser -u doocsadm -- sed -e " \
			s/NODENAME/${UNODENAME}/g; \
			s/nodename/${NODENAME}/g; \
			s/servername/${SERBASE}_server/g; \
			s/SERVERLIBNO/${RPC_LIBNO}/g; \
			w ${CONFFILE}" \
			${INSTDIR}/${SERBASE}_CONF.TEMPLATE > /dev/null
	else
		echo "!!! No CONF.TEMPLATE for ${SERBASE} !!!"
	fi
fi

######## create logfile if needed
if [ ! -f ${LOGFILE} ]; then
	runuser -u doocsadm -- touch ${LOGFILE}
fi

######## create pidfile if needed
if [ ! -f ${PIDFILE} ]; then
	runuser doocsadm -c "echo 0 > ${PIDFILE}"
fi

######## update the server binary
echo "Updating binary..."
test -x ${BINARY} && mv -f ${BINARY} ${BINARY}.OLD
cp -a ${BINARY}.dist ${BINARY}

######## watchdog template
if [ -f /export/doocs/server/watchdog_server/WATCHDOG_CONF_ENTRY.TEMPLATE ] ; then
	if [ ! -f /export/doocs/server/watchdog_server/WATCHDOG_CONF_ENTRY.${SERBASE} ] ; then
		runuser -u doocsadm -- sed -e " \
			s/NODENAME/${UNODENAME}/g; \
			s/nodename/${NODENAME}/g; \
			s/servername/${SERBASE}_server/g; \
			s/SERVERNAME/${SERNAME}/g; \
			s/SERVERLIBNO/${RPC_LIBNO}/g; \
			w /export/doocs/server/watchdog_server/WATCHDOG_CONF_ENTRY.${SERBASE}" \
			/export/doocs/server/watchdog_server/WATCHDOG_CONF_ENTRY.TEMPLATE > /dev/null
	fi
fi

######## ens
echo "Add server to ens: ${RPC_LIBNO}"

######## check if this server is already in the watchdog
INWD=`grep ${SERVDIR} /export/doocs/server/watchdog_server/watchdog_server.conf || true`
if [ -z "${INWD}" ] ; then
	echo "Creating watchdog entry..."
	/export/doocs/server/doocs add ${SERBASE}_server || true
fi

####### Restart the server if requested
if [ -f ${INSTDIR}/AUTORESTART ] ; then
	# stop the server, and the watchdog will restart the server if
	# the server was set online before
	/export/doocs/server/doocs stop ${SERBASE}_server || true
fi

# End of make-doocspkg/postinst content
